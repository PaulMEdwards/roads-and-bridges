<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>
      Roads and Bridges
    </title>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="style.css" />
  </head>
  <body>
    <h1>
      Sustaining Digital Infrastructure
    </h1>
    <section id="business-models">
      <h2>
        Business models for digital infrastructure
      </h2>
      <p>
        Some parts of digital infrastructure function well in a business context. Databases and hosting services, for
        example, tend to be well-funded and profitable businesses, because they can charge for access. Like electricity
        or water utilities, access to a server or database can be metered, charged for, and shut off if fees go unpaid.
      </p>
      <p>
        Heroku (mentioned at the beginning of this paper) and Amazon Web Services are two prominent examples of
        platforms that sell digital infrastructure services to software developers for a fee. (Note that neither
        project is open source.) Similar open source projects at this level of infrastructure, such as OpenStack (a
        platform competitive to Amazon Web Services) or MySQL (a database), have found corporate homes. OpenStack is
        funded by a consortium of companies and MySQL was acquired by Oracle.
      </p>
      <p>
        Part of what makes these services financially attractive is the lack of noise. A developer may use 20 different
        libraries, all with different functions, in a single software application, but they only need one database.
        Therefore, successful projects are more likely to get the attention and care that they need.
      </p>
      <p>
        Another helpful way of thinking about infrastructure that can be charged for is that if there is an immediate
        risk of downtime, it probably has a business model. In other words, a server can have unexpected interruptions
        in service, the way electricity might unexpectedly shut off, but a programming language does not “break” or
        have downtime in the same way, because it is a system of information. <sup><a href="appendix.xhtml#ftnt119" id=
        "ftnt_ref119">[119]</a></sup>
      </p>
      <p>
        For these types of open source projects, business models tend to revolve around finding services or support to
        charge for. This works for projects with significant enterprise use, particularly when the problem is
        technically complex, or a company needs a feature to be built.
      </p>
      <h3>
        Bounties
      </h3>
      <p>
        On a small scale, individuals or companies sometimes post “bounties”, which are cash prizes for certain
        development milestones. For example, IBM regularly requests new features for various projects using a website
        called Bountysource, offering up to $5,000 per task. Bountysource is a popular platform to find and post
        bounties; it has over 26,000 members. <sup><a href="appendix.xhtml#ftnt120" id="ftnt_ref120">[120]</a></sup>
      </p>
      <p>
        Bounties help address the aforementioned issues of simply donating to a project. Because bounties are clearly
        tied to an outcome, the money will get used. On the other hand, bounties can create perverse incentives for
        contributing to a project.
      </p>
      <p>
        Bounties can dictate which work does or doesn’t get done, and sometimes that work doesn’t align with a
        project’s priorities. It can also introduce noise into the system: for example, a company could offer an
        expensive bounty for a feature that the project owners do not consider important.
      </p>
      <p>
        On the contributor side, outsiders with no knowledge of a project might jump in just to complete the bounty,
        then leave. Or, they might do a poor job of completing the request, because they are trying to collect
        bounties. Finally, bounties can be appropriate for funding new features or prominent bugs, but are less
        practical for funding ongoing operations, such as customer support or maintenance.
      </p>
      <p>
        Jeff Atwood, the creator of Stack Overflow, noted these problems with bounty programs, particularly with regard
        to security:
      </p>
      <blockquote>
        <p>
          One unfortunate side effect of this bug bounty trend is that it attracts not just bona fide programmers
          interested in security, but anyone interested in easy money. We've gotten too many ‘serious’ security bug
          reports that were extremely low value. And we have to follow up on these, because they are ‘serious,’ right?
          Unfortunately, many of them are a waste of time…The incentives feel really wrong to me. As much as I know
          security is incredibly important, I view these interactions with an increasing sense of dread because they
          generate work for me and the returns are low.<sup><a href="appendix.xhtml#ftnt121" id=
          "ftnt_ref121">[121]</a></sup>
        </p>
      </blockquote>
      <h3>
        Services
      </h3>
      <p>
        On a larger scale, one of the best-known and oft-cited examples of an open source business model is Red Hat,
        the aforementioned enterprise company, which offers support, training and other services to enterprises that
        use Linux. Red Hat was founded in 1993 and is a publicly traded company with reported revenues of $2B per year.
      </p>
      <p>
        Although Red Hat has been wildly successful from a financial standpoint, many are quick to point out that it is
        an anomaly unlikely to be repeated again. Red Hat benefited from first mover advantage for the technology it
        supports. Matt Asay, a journalist who focuses on open source, noted that Red Hat uses a unique set of patents
        and licensing to protect its enterprise market. Asay, once a major proponent of open source businesses, now
        believes that some proprietary licensing is necessary to build a serious business. <sup><a href=
        "appendix.xhtml#ftnt122" id="ftnt_ref122">[122]</a></sup> Matthew Aslet of the 451 Group, a research group,
        similarly found that most successful “open source” enterprises actually use some form of commercial licensing.
        <sup><a href="appendix.xhtml#ftnt123" id="ftnt_ref123">[123]</a></sup>
      </p>
      <p>
        Docker, the previously mentioned open source project that helps applications run efficiently, is a more recent
        example of a company attempting this model. Docker has raised $180M in venture capital from investors, with a
        reported $1B valuation from private investors. <sup><a href="appendix.xhtml#ftnt124" id=
        "ftnt_ref124">[124]</a></sup> As their market share has grown, Docker has begun offering enterprise-level
        support services. Yet without strong revenues, Docker could simply be another example of venture capital making
        a “loss leader” infrastructure investment.
      </p>
      <p>
        On a smaller scale, many developers offer consulting services to subsidize their work. Hoodie is a lightweight
        software framework based on Node that has found success with consulting services. Hoodie itself is an open
        source project. Several maintainers earn money through a boutique firm, Neighbourhoodie, that offers software
        development services. <sup><a href="appendix.xhtml#ftnt125" id="ftnt_ref125">[125]</a></sup> Although
        Neighbourhoodie specializes in the Hoodie framework, Hoodie is still a fairly new project, so some of their
        work comes from non-Hoodie-related projects. <sup><a href="appendix.xhtml#ftnt126" id=
        "ftnt_ref126">[126]</a></sup> In Hoodie’s case, the services model is meant to support the salaries of several
        maintainers, rather than aiming for a Red Hat-sized enterprise strategy.
      </p>
      <p>
        Consulting is a viable option for independent developers, if there are enough people using the project who are
        willing and able to pay for extra help. However, on a small scale, it can also distract developers from
        improving the project itself, as the one or two maintainers are now spending their time building a business and
        providing services that may or may not align with a project’s maintenance needs.
      </p>
      <p>
        Aiming for a consulting business can also put creators at odds with making the product easy to use and get
        started with, which is in the spirit of open source. Twisted, the aforementioned Python library, shared a
        playful testimony from one of its users, a company called Mailman: <q>You guys have a big problem, because it
        was way too easy to do! How are you going to make the big consulting bucks? :)</q> <sup><a href=
        "appendix.xhtml#ftnt127" id="ftnt_ref127">[127]</a></sup>
      </p>
      <p>
        In the end, the “business model” for an open source project is not dissimilar from simply freelancing.
      </p>
      <h3>
        Paid licenses
      </h3>
      <p>
        Some developers feel that licensing could provide at least a partial solution to open source’s funding
        problems. If open source projects are being heavily used, why not charge for them?
      </p>
      <p>
        These “paid licenses” are not technically open source licenses, according to the Open Source Initiative’s
        definition.<sup><a href="appendix.xhtml#ftnt128" id="ftnt_ref128">[128]</a></sup> Rather, they are initiatives
        attempting to balance the very real need for paid work with the desire to make code available to the public.
        This type of code might be called “source visible” or “source available.” Fair Source, for example, describes
        itself as <q>[offering] some of the benefits of open source while preserving the ability to charge for the
        software.</q> <sup><a href="appendix.xhtml#ftnt129" id="ftnt_ref129">[129]</a></sup>
      </p>
      <p>
        The Fair Source license was announced in November 2015 by a company called Sourcegraph to address the need for
        a paid license. The license terms were drafted by Heather Meeker, a lawyer who also worked on the core team for
        the Mozilla Public License v2.0.
      </p>
      <p>
        Under Fair Source, code is free to view, download, execute, and modify up to a certain number of users in an
        organization. After that limit is reached, the organization must pay a licensing fee, determined by the
        publisher. <sup><a href="appendix.xhtml#ftnt130" id="ftnt_ref130">[130]</a></sup> In other words, Fair Source
        code is free for personal and small business use, but provides a legal basis to charge for bigger commercial
        use cases.
      </p>
      <p>
        Sourcegraph’s announcement of the Fair Source license, which they themselves now use, sparked a spirited debate
        about monetizing open source. (It is worth noting that a comparable “shareware” movement was attempted and
        popularized in the 1980s.)
      </p>
      <p>
        Mike Perham, a maintainer of Sidekiq, a popular Ruby developer tool, also recently suggested that open source
        contributors use a “dual license” to monetize their work, charging companies for access to a permissive MIT
        license instead of a more restrictive AGPL license that would require attribution. His theory is that by making
        AGPL the default license, <q class="normal">businesses will pay to avoid it.</q>
      </p>
      <p>
        To support this idea, Perham reminded his audience:
      </p>
      <blockquote>
        <p>
          Remember: Open Source != Free Software. The source may be viewable on GitHub but that doesn’t mean anyone can
          use it for any purpose. <a href="appendix.xhtml#ftnt131" id="ftnt_ref131">[131]</a> There’s no reason you
          can’t make your source code accessible but also charge to use it. As long as you are the owner of the code,
          you have the right to license it however you want.
        </p>
        <p>
          …[The] reality is most smaller OSS projects have a single person doing 95% of the work. If this is true, be
          grateful for unpaid help but don’t feel guilty about keeping 100% of the income. <sup><a href=
          "appendix.xhtml#ftnt132" id="ftnt_ref132">[132]</a></sup>
        </p>
      </blockquote>
      <p>
        Charging businesses provides another option for developers to support their work, particularly if it is one or
        two maintainers supporting an active project. However, not every project could successfully charge for its
        work, especially older projects, or infrastructure projects that look more like public goods than consumer
        products, such as programming languages.
      </p>
      <p>
        While paid licensing could work for certain product scenarios, this model is also arguably at odds with the
        enormous social value that open source has provided, which suggests that when software is free, innovation
        follows. The goal should not be to move back towards a closed software society, where progress and creativity
        are constrained, but to sustainably support a public ecosystem in which software can be freely created and
        distributed.
      </p>
    </section>
    <section id="finding-a-sponsor">
      <h2>
        Finding a sponsor or donor for an infrastructure project
      </h2>
      <p>
        The other option for supporting infrastructure projects is to find sponsorships or donations. This practice is
        especially common in the following situations:
      </p>
      <ul class="callout">
        <li>
          <p>
            <strong>There is no paid client demand</strong> for services associated with the project
          </p>
        </li>
        <li>
          <p>
            <strong>Charging directly for access would prevent adoption</strong> (one could not charge to use Python as
            a programming language, for example, because nobody would use it; it would be like charging people to speak
            English)
          </p>
        </li>
        <li>
          <p>
            <strong>There isn’t enough capacity</strong> to manage paid work, or no desire on the developer’s part to
            deal with business matters
          </p>
        </li>
        <li>
          <p>
            <strong>Neutrality and non-commercialization</strong> are perceived to be important for governance purposes
          </p>
        </li>
      </ul>
      <p>
        In this situation, a project maintainer will look for benefactors who believe in the value of their work and
        are willing to financially support them. There are two major sources of funding at the moment: software
        companies and other developers.
      </p>
      <h3>
        Crowdfunding
      </h3>
      <p>
        Some development work gets funded through crowdfunding campaigns, such as Kickstarter or Indiegogo.
        Bountysource, the aforementioned open source bounty website, also has a platform called Salt, dedicated to
        crowdfunding open source projects.
      </p>
      <p>
        Andrew Godwin, a London-based Django core developer, successfully raised £17,952 (roughly $25,000) from 507
        backers on Kickstarter to fund database work for Django. The project was fully funded in less than four hours.
      </p>
      <p>
        Of his decision to raise funds for an open source project, Godwin wrote:
      </p>
      <blockquote>
        <p>
          A lot of open source code gets done for free. However, my free time is limited. I currently have a day a week
          available for work, and I'd love to spend it improving Django rather than doing consulting or contracting.
        </p>
        <p>
          The idea here is twofold—to guarantee the project a solid period of work and at least 80 or so hours of
          coding time, as well as to try and show the world that open source software really can pay for developers'
          time.<sup><a href="appendix.xhtml#ftnt133" id="ftnt_ref133">[133]</a></sup>
        </p>
      </blockquote>
      <p>
        Similarly to bounties, crowdfunding can be useful for funding new features or development work with a clear,
        tangible outcome. Crowdfunding can also help reduce perverse incentives from bounties, since campaigns take a
        bit more time and effort than posting a bounty, and tend to get funded based on public trust in the campaign
        owner’s ability to deliver. In this case, Godwin had been a core contributor to Django for six years and was
        well-known in the community.
      </p>
      <p>
        However, crowdfunding still does not address the need for funding related to ongoing operations and overhead.
        It is also not a recurring source of capital, and there is a mental and time cost associated with planning and
        executing a crowdfunding campaign each time. Finally, backers of these projects tend to be fellow developers,
        or small company contributions—there are only so many times a campaign owner can tap the same source of capital
        to fund their projects.
      </p>
      <p>
        Godwin himself later wrote of the experience:
      </p>
      <blockquote>
        <p>
          I don't think [crowdfunding] meshes entirely well with general open source development; not only is it just a
          one-time payment, but the idea of rewards often doesn't match well and it requires something you can entirely
          bound and describe up front.
        </p>
        <p>
          Just relying on people's good will [sic] isn't going to work, and we'll end up disproportionately appealing
          to independent developers or developers on a personal level and that's not as sustainable I don't
          think.<sup><a href="appendix.xhtml#ftnt134" id="ftnt_ref134">[134]</a></sup>
        </p>
      </blockquote>
      <p>
        Aside from crowdfunding campaigns, several platforms have also emerged to encourage the practice of “tipping”
        open source contributors: that is, pledging small amounts of recurring revenue to a contributor as a sign of
        support for his or her work. Two popular platforms are Patreon (which does not exclusively focus on open source
        contributors) and Gratipay (which tends to attract a more technical community).
      </p>
      <p>
        The idea of recurring revenue is appealing, but suffers some of the same problems as crowdfunding. Namely, most
        patrons are developers themselves, with limited amounts of capital to pledge to each other. Donations are
        widely considered to be helpful as “beer money,” but not “rent money.” Gratipay has 122 teams on its platform
        who collectively receive $1,000 per week, meaning that the average project receives less than $40 per
        month.<sup><a href="appendix.xhtml#ftnt135" id="ftnt_ref135">[135]</a></sup>
      </p>
      <p>
        Even very large projects such as OpenSSL only generated $2,000 in annual donations prior to Heartbleed. As
        mentioned before, after Heartbleed, team member Steve Marquess noted the <q class="normal">outpouring of
        grassroots support from the OpenSSL community</q>: the first round of donations came out to roughly 200 donors
        for a total of $9,000. Marquess thanked the community for its support, but also noted:
      </p>
      <blockquote>
        <p>
          Even if those donations continue to arrive at the same rate indefinitely (they won’t), and even though every
          penny of those funds goes directly to OpenSSL team members, it is nowhere near enough to properly sustain the
          manpower levels needed to support such a complex and critical software product. While OpenSSL does “belong to
          the people” it is neither realistic nor appropriate to expect that a few hundred, or even a few thousand,
          individuals provide all the financial support. The ones who should be contributing real resources are the
          commercial companies and governments who use OpenSSL extensively and take it for granted.<sup><a href=
          "appendix.xhtml#ftnt136" id="ftnt_ref136">[136]</a></sup>
        </p>
      </blockquote>
      <p>
        (To Marquess’s point, subsequent corporate donations were larger, as companies had more to give than
        individuals. The biggest donation came from Chinese smartphone maker Smartisan, to the tune of $160,000.
        <sup><a href="appendix.xhtml#ftnt137" id="ftnt_ref137">[137]</a></sup> Smartisan has continued to make
        substantial donations to OpenSSL. <sup><a href="appendix.xhtml#ftnt138" id="ftnt_ref138">[138]</a></sup> )
      </p>
      <p>
        Finally, the reality is that there are too many projects, all valuable or critical in some way, and not enough
        donors, for the technical community — companies or individuals — to be able to lend mindshare and donate
        significantly to all of them.
      </p>
      <h3>
        Corporate sponsorship of infrastructure projects
      </h3>
      <p>
        On a larger scale, in some instances, a project’s value becomes so widely regarded that a company will hire a
        contributor to work on the project full-time.
      </p>
      <p>
        John Resig is the author of jQuery, a JavaScript programming library that is used by nearly two-thirds of the
        top million most-trafficked websites. <sup><a href="appendix.xhtml#ftnt139" id="ftnt_ref139">[139]</a></sup> He
        built and released jQuery as a side project in 2006. John joined Mozilla in 2007 as a developer evangelist,
        specifically focusing on JavaScript libraries. <sup><a href="appendix.xhtml#ftnt140" id=
        "ftnt_ref140">[140]</a></sup>
      </p>
      <p>
        As jQuery continued to grow in popularity, it became apparent that, in addition to further technical
        development, it needed to formalize some of its governance aspects. Mozilla suggested that John work on jQuery
        full-time from 2009 to 2011, which he did.
      </p>
      <p>
        Of the experience, John wrote:
      </p>
      <blockquote>
        <p>
          Over the past year and a half Mozilla gave me the ability to work on jQuery full-time. This has resulted in 9
          releases of jQuery...and a drastically improved jQuery organization (we’re now under the Software Freedom
          Conservancy non-profit, hold frequent team meetings, public votes, provide public status updates, and
          actively encourage participation). Thankfully the jQuery project is running quite smoothly these days,
          allowing me to scale back my involvement to a more-reasonable amount of time and take on other development
          work. <sup><a href="appendix.xhtml#ftnt141" id="ftnt_ref141">[141]</a></sup>
        </p>
      </blockquote>
      <p>
        After using his time at Mozilla to get jQuery the organizational support it needed, John announced he would
        join Khan Academy to focus on new projects outside of jQuery.
      </p>
      <p>
        Cory Benfield, a Python developer, has a similar story. Cory contributed to open source projects in his spare
        time, eventually becoming a core developer for a critical Python library called Requests. Benfield notes:
      </p>
      <blockquote>
        <p>
          This library is up there with Django in terms of being “critical infrastructure” for Python developers, and
          yet before I came on to [sic] the project was essentially maintained by a single individual. <sup><a href=
          "appendix.xhtml#ftnt142" id="ftnt_ref142">[142]</a></sup>
        </p>
      </blockquote>
      <p>
        Benfield estimates that he volunteered on the project roughly 12 hours per week for nearly four years, in
        addition to his full-time job. <sup><a href="appendix.xhtml#ftnt143" id="ftnt_ref143">[143]</a></sup> Nobody
        was paid to work on Requests.
      </p>
      <p>
        During this time, HP hired an employee, Donald Stufft, to focus specifically on supporting Python-related
        projects, since HP considers Python to be critical to its software. (Donald is the aforementioned developer who
        is paid full-time to focus on Python packaging.) Donald convinced his manager to hire Cory to focus full-time
        on Python projects, where he currently works today (now under HPE).
      </p>
      <p>
        Companies are well-positioned to financially support volunteer projects that they consider to be critical to
        their business, and when situations like John Resig’s or Cory Benfield’s happen, they are warmly received.
        However, there are complications.
      </p>
      <p>
        Firstly, no company is obligated to hire someone to work on projects in these situations; they tend to come
        about by chance from a sympathetic patron. Once an employee is hired, there is always the possibility of losing
        that sponsorship, especially because the employee does not directly contribut e to the company’s bottom line.
        This is especially dangerous if a project’s sustainability depends upon one contributor being employed
        full-time. In the case of Requests, Cory is the only full-time contributor (there are two other part-time
        contributors, Ian Cordasco and Kenneth Reitz).
      </p>
      <p>
        One situation where this occurred was in the case of rvm, a critical piece of Ruby infrastructure. Michal
        Papis, its primary author, was hired by Engine Yard to support rvm’s development from 2011 to 2013. When that
        sponsorship ended, however, Papis had to run a crowdfunding campaign to support rvm’s ongoing development.
        <sup><a href="appendix.xhtml#ftnt144" id="ftnt_ref144">[144]</a></sup>
      </p>
      <p>
        It wasn’t just rvm, either. Engine Yard had employed a number of maintainers of Ruby infrastructure projects,
        including JRuby, Ruby on Rails 3, and bundler. When Engine Yard was forced to make the right business decision
        for their company, which was to scale back support, all of these projects lost full-time maintainers, nearly
        all at the same time.
      </p>
      <p>
        Another concern is that a single company could have undue influence over the project, since they are
        effectively the only sponsor. Cory Benfield notes that that the contributor him or herself could also have
        undue influence over the project, since they now have much more time than others to make contributions.
        <sup><a href="appendix.xhtml#ftnt145" id="ftnt_ref145">[145]</a></sup> In theory, that decision could be made
        between a company and a maintainer, without involving the project’s larger community.
      </p>
      <p>
        One example where this occurred was in the case of Express.js, a critical framework for the Node.js ecosystem.
        When the original author decided to move on from the project, he transferred the assets (including the code
        repository and domain name) to a company called StrongLoop, whose employees agreed to help maintain the
        project. <sup><a href="appendix.xhtml#ftnt146" id="ftnt_ref146">[146]</a></sup> However, StrongLoop didn’t
        provide the support that the community expected, and because StrongLoop alone had administrative access, it
        became difficult for the community to contribute. Doug Wilson, a lead maintainer on the project who is
        unaffiliated with StrongLoop, still had commit access and continued to manage the project’s workload,
        struggling to handle the project’s needs by himself.
      </p>
      <p>
        Following StrongLoop’s acquisition by IBM, Doug declared that StrongLoop had effectively killed the contributor
        community:
      </p>
      <blockquote>
        <p>
          At the time of the StrongLoop move, we had active members like <a href=
          "https://github.com/Fishrock123">@Fishrock123</a> working to create...documentation. Then all there was was
          me as a single person doing this in my free time with mounting support requests….all this time I've been
          killing myself, I have been committing under the StrongLoop name. No matter what happens, I will not ever
          commit again to any repository under StrongLoop's name.<sup><a href="appendix.xhtml#ftnt147" id=
          "ftnt_ref147">[147]</a></sup>
        </p>
      </blockquote>
      <p>
        Ultimately, the Express.js project was moved out of StrongLoop’s administration and into the Node.js
        Foundation, which helps steward projects that are part of the Node.js technology ecosystem.
      </p>
      <p>
        For very large and well-known open source projects, however, hiring developers is not an unusual practice. The
        Linux Foundation reported, for example, that more than 80 percent of Linux kernel development is done by
        developers who are paid for their work. <sup><a href="appendix.xhtml#ftnt148" id="ftnt_ref148">[148]</a></sup>
        The Linux Foundation also hires paid Fellows to work on infrastructure projects full time, including Greg
        Kroah-Hartman, a Linux kernel developer, and Linus Torvalds himself, the creator of the Linux kernel.
      </p>
    </section>
    <section id="hard-to-fund">
      <h2>
        Why is it so hard to fund these projects?
      </h2>
      <p>
        Today, infrastructure work is being cobbled together by freelance developers or those with “day jobs,” doing
        unrelated paid client work for part of the month and working on open source projects in their spare time. While
        this is a viable way to pay for one’s lifestyle, it does not adequately reflect the social value that these
        projects deserve .
      </p>
      <p>
        Stunningly, although everybody agrees there is a problem (whether defined as “volunteer burnout”, community
        mismanagement or a greater lack of funding), the conversation has not progressed beyond meager, short-term
        solutions such as tipping or crowdfunding.
      </p>
      <p>
        Talk to developers who found a way to pay themselves, and you’ll hear the word “lucky” thrown around: lucky to
        have been hired by a company, lucky to have gotten publicity and donations, lucky to have stumbled upon a
        business model, lucky to not have a family or mortgage to worry about. Everybody is getting lucky. Luck lasts
        for a couple of months, maybe a year or two, and then it runs out.
      </p>
      <p>
        Why is it so hard to fund digital infrastructure?
      </p>
      <p>
        Fundamentally, digital infrastructure has a free rider problem. Resources are offered for free, and everybody
        (whether individual developer or large software company) uses them, so nobody is incentivized to contribute
        back, figuring that somebody else will step in. Left unchecked, this will lead to a tragedy of the commons.
      </p>
      <p>
        In addition to the macroeconomic challenge of the commons, there are several reasons why supporting digital
        infrastructure is particularly complicated. Although they have been touched upon throughout this report, they
        are summarized here:
      </p>
      <ul class="callout">
        <li>
          <p>
            <strong>There is a misperception that this is a “solved problem.”</strong> The pervasive belief, even among
            stakeholders such as software companies, that open source is well-funded, makes it harder to generate
            support. Some infrastructure projects operate sustainably, either because they have a working business
            model or sponsorship, or because their required upkeep is limited. An unfamiliar audience will also
            associate open source with enterprise companies like Red Hat or Docker and assume the problem has been
            solved. However, these situations are the outliers, not the rule.
          </p>
        </li>
        <li>
          <p>
            <strong>There is a lack of cultural understanding and awareness about the problem.</strong> Outside of the
            open source community, nearly everybody remains unaware of infrastructure’s funding issues, and the topic
            is perceived to be dry and technical. Developers needing support tend to have a highly technical focus and
            aren’t comfortable advocating for the business side of their work. Taken together, there is no momentum to
            change a broken situation.
          </p>
        </li>
        <li>
          <p>
            <strong>Digital infrastructure is rooted in open source, whose volunteer culture discourages talk of
            money.</strong> Although this attitude has made open source what it is today, it also makes it difficult
            for developers to openly discuss their needs without feeling guilty or worrying about not being perceived
            as a team player. Open source’s highly distributed and democratic nature also makes it difficult to
            coordinate and sustain institutional actors who could act as advocates for their needs.
          </p>
        </li>
        <li>
          <p>
            <strong>Digital infrastructure is highly distributed, compared to physical infrastructure.</strong> Unlike
            planning the construction of a bridge, it’s not always clear which projects are useful until after they
            have already taken off. They cannot be planned beforehand by a centralized entity. At the other end of the
            lifecycle, some projects are meant to decline as other, better solutions take their place. Digital
            infrastructure is distributed across hundreds of projects, large and small, built by individuals, groups
            and companies; it would be a behemoth task to catalog them all.
          </p>
        </li>
      </ul>
      <blockquote>
        <p>
          It's hard to find funding...for the average developer (me) some of them are totally out of reach.
          [Kickstarter] only works if you either go viral or hire someone to do all of the
          marketing/design/promotions….Turning a project into a business is great too, but...these are all things that
          take away from development (which is the part I like to focus on). If I wanted to get a grant, I wouldn't
          even know where to start.<sup><a href="appendix.xhtml#ftnt149" id="ftnt_ref149">[149]</a></sup>
        </p>
        <footer>
          - Kyle Kemp, freelance developer and open source contributor
        </footer>
      </blockquote>
    </section>
    <section id="institutional-efforts">
      <h2>
        Institutional efforts to support digital infrastructure
      </h2>
      <p>
        There are some institutional efforts to collectively organize and help support open source projects. Some are
        independent software foundations; other sources of support come from software companies themselves.
      </p>
      <h3>
        Administrative support and fiscal sponsorship
      </h3>
      <p>
        Several foundations provide organizational support, such as fiscal sponsorship, to open source projects: in
        other words, taking care of the non-coding tasks that many developers would prefer not to do.
      </p>
      <p>
        The Apache Software Foundation, incorporated in 1999, was created partially to support development of the
        Apache HTTP Server, which serves roughly 55% of all websites worldwide. <sup><a href="appendix.xhtml#ftnt150"
        id="ftnt_ref150">[150]</a></sup> Since then, it has become a home for over 350 open source projects.
        <sup><a href="appendix.xhtml#ftnt151" id="ftnt_ref151">[151]</a></sup> Apache structures itself as a
        decentralized community of developers, with no full-time employees and nearly 3,000 volunteers. It offers
        several services to projects, mostly around organizational, legal, and development support. As of 2011, Apache
        had an annual budget of over $500,000, most of which come s from grants and contributions. <sup><a href=
        "appendix.xhtml#ftnt152" id="ftnt_ref152">[152]</a></sup>
      </p>
      <p>
        The Software Freedom Conservancy, established in 2006, also provides nonprofit administration services for over
        30 free and open source projects. Projects supported by the Software Freedom Conservancy include Git, the
        aforementioned version control system upon which GitHub built its platform, and Twisted, the aforementioned
        Python library. <sup><a href="appendix.xhtml#ftnt153" id="ftnt_ref153">[153]</a></sup>
      </p>
      <p>
        Other examples of foundations who provide organizational support include The Eclipse Foundation and Software in
        the Public Interest. The Linux Foundation and Mozilla Foundation also support external open source projects in
        various ways (discussed later in this section), though that is not the primary purpose of their mission.
      </p>
      <p>
        It is important to note that these foundations provide legal and administrative, but rarely financial, support.
        Therefore, sponsorship by Apache or the Software Freedom Conservancy alone does not fund a project in itself;
        the foundations only help make it easier to process donations and manage the project.
      </p>
      <p>
        Another important observation is that these initiatives support free and open source software from a
        philosophical perspective, but do not focus on infrastructure specifically. For example, OpenTripPlanner, a
        project supported by the Software Freedom Conservancy, is trip planner software; although the code that powers
        it is open source, it is a consumer application, not infrastructure.
      </p>
      <h3>
        Creating a foundation to support a project
      </h3>
      <p>
        Some projects are large enough to be managed through their own foundations. Python, Node.js, Django, and jQuery
        all have complementary foundations.
      </p>
      <p>
        There are two important aspects to getting a foundation off the ground: qualifying for tax-exempt status and
        finding funding.
      </p>
      <p>
        Qualifying as a 501(c)(3) can be challenging for these projects, due to the lack of awareness about open source
        technology and tendency to see open source as a non-charitable activity. In 2013, a controversy revealed that
        the IRS had internally identified a list of groups applying for tax-exempt status that would require further
        scrutiny; “open source” was one of these. <sup><a href="appendix.xhtml#ftnt154" id=
        "ftnt_ref154">[154]</a></sup> <sup><a href="appendix.xhtml#ftnt155" id="ftnt_ref155">[155]</a></sup>
        Unfortunately, these constraints make it difficult for projects to institutionalize.
      </p>
      <p>
        For instance, Russell Keith-Magee, who until recently was president of the Django Software Foundation,
        explained that the foundation cannot directly “fund” software development of Django, without the risk of losing
        its 501(c)(3) status. Instead, they “support” its development through community activities.
      </p>
      <p>
        In June 2014, the Yorba Foundation, which made Linux productivity software, was denied 501(c)(3) status, after
        waiting nearly four and a half years for the decision. Jim Nelson, its executive director, was particularly
        alarmed by the IRS’s reasoning: because their software could be used by commercial entities, Yorba’s work could
        not be considered charitable. A letter from the IRS explained:
      </p>
      <blockquote>
        <p>
          Mere publishing under open source licenses for all to use does not show that the poor and underprivileged
          actually use the Tools.[…]You do not know who uses the Tools much less what kind of content they create with
          the Tools.<sup><a href="appendix.xhtml#ftnt156" id="ftnt_ref156">[156]</a></sup>
        </p>
      </blockquote>
      <p>
        Nelson pointed out the flaws in this reasoning in a blog post, comparing it to any other public good:
      </p>
      <blockquote>
        <p>
          There’s a charitable organization here in San Francisco that plants trees throughout the city for the benefit
          of all. If one of their trees...cools the cafe’s patrons as they enjoy their espressos, does that mean the
          tree-planting organization is no longer a charity?<sup><a href="appendix.xhtml#ftnt157" id=
          "ftnt_ref157">[157]</a></sup>
        </p>
      </blockquote>
      <p>
        Projects that qualify for 501(c)(3) status tend to mention their focus on community, as with the Python
        Software Foundation, whose mission is <q>to promote, protect, and advance the Python programming language, and
        to support and facilitate the growth of a diverse and international community of Python programmers.</q>
        <sup><a href="appendix.xhtml#ftnt158" id="ftnt_ref158">[158]</a></sup>
      </p>
      <p>
        Alternatively, some projects apply to become a trade association through a 501(c)(6) status. The jQuery
        Foundation is an example of this, describing itself as a <q>member supported non-profit trade association for
        web developers.</q> <sup><a href="appendix.xhtml#ftnt159" id="ftnt_ref159">[159]</a></sup> The Linux Foundation
        is also a trade association.
      </p>
      <p>
        The second aspect of formalizing project governance through a foundation is finding the right source of
        funding. Some foundations are supported by individual contributions, but have comparatively small budgets.
      </p>
      <p>
        The Django Software Foundation, for example, manages Django, the most popular web framework written in Python,
        used by companies like Instagram and Pinterest. The foundation is run by volunteers and takes in less than
        $60,000 in donations per year. <sup><a href="appendix.xhtml#ftnt160" id="ftnt_ref160">[160]</a></sup> Last
        year, they received a one-time $150,000 grant from the Mozilla Foundation. <sup><a href=
        "appendix.xhtml#ftnt161" id="ftnt_ref161">[161]</a></sup>
      </p>
      <p>
        The other common source of funding is corporate sponsors. Corporate entities can be well-suited for funding
        because they use these software projects themselves. The Linux Foundation is one of the most successful
        outliers, due to the fundamental value of the Linux kernel to nearly every corporate entity. The Linux
        Foundation has $30M in annually managed capital from corporate members such as IBM, Intel, Oracle, and Samsung,
        and is growing. <sup><a href="appendix.xhtml#ftnt162" id="ftnt_ref162">[162]</a></sup>
      </p>
      <p>
        Creating a foundation to support a project is sensible for very large infrastructure projects. It is less
        suitable for smaller projects, due to the work, resources, and ongoing corporate sponsorship needed to create a
        sustainable organization.
      </p>
      <p>
        Node.js is a recent successful example of using a foundation to support a large project. Node.js is a
        JavaScript framework, developed in 2009 by Ryan Dahl and several other developers working at Joyent, a private
        software company. It became extremely popular, but began to suffer governance constraints due to Joyent’s
        patronage, whom some felt could not fully represent an enthusiastic and fast-growing Node.js community.
      </p>
      <p>
        In 2014, a group of Node.js contributors threatened to fork the project. Joyent tried to address governance
        issues by forming an Advisory Board for the project, but the project was forked anyway, under the name io.js.
        <sup><a href="appendix.xhtml#ftnt163" id="ftnt_ref163">[163]</a></sup> In February 2015, an intent to form a
        501(c)(6) organization was announced which would remove Node.js from Joyent’s stewardship. The Node.js and
        io.js communities voted to work together under this new entity, called the Node.js Foundation. The Node.js
        Foundation, structured under the advisorship of the Linux Foundation, has a number of corporate sponsors who
        financially contribute to its budget, including IBM, Microsoft, and PayPal. <sup><a href=
        "appendix.xhtml#ftnt164" id="ftnt_ref164">[164]</a></sup> These sponsors see influential value in supporting
        the development of a popular software project that powers the web, and they have the resources to spare.
      </p>
      <p>
        Another promising example is Ruby Together, an organization launched by several Ruby developers to support Ruby
        infrastructure projects. Ruby Together is structured as a trade association, in which corporate and individual
        donors pledge money to fund full-time developers to improve core Ruby infrastructure. Donors elect a volunteer
        board of directors, who help decide which projects Ruby Together should work on each month.
      </p>
      <p>
        Ruby Together was conceived by, and funds the work of, two developers: André Arko and David Radcliffe. As of
        April 2016, they now fund the work of four other infrastructure maintainers. Their monthly budget as of March
        2016 was just over $18,000/month, funded entirely by donations. Ruby Together was announced in March 2015 and
        is still a new project, but could serve as a blueprint for a more community-oriented model to fund work on
        other software infrastructure projects. <sup><a href="appendix.xhtml#ftnt165" id="ftnt_ref165">[165]</a></sup>
      </p>
      <h3>
        Corporate programs
      </h3>
      <p>
        Software companies support infrastructure projects in various ways. As beneficiaries of infrastructure
        projects, they contribute back by reporting bugs, suggesting or submitting new features, and providing other
        forms of feedback. Some companies encourage their employees to contribute to critical projects on company time.
        Many employees have significant contributor roles for external open source projects. For some employees, open
        source work is an explicit part of their job. Dedicating salaried time is one of the most important ways that
        companies contribute to open source.
      </p>
      <p>
        Large companies like Google or Facebook are eagerly embracing open source as way to build trust and influence,
        because they are the only institutional actors large enough to absorb its costs without needing a financial
        return on investment. Open source projects help strengthen a company’s influence, whether by releasing their
        own open source projects or hiring key developers to work on an open source project full-time.
      </p>
      <p>
        These practices are not limited to pure software companies, either. Walmart, for example, is a major supporter
        of open source, investing over $2M in an open source project called hapi.<sup><a href="appendix.xhtml#ftnt166"
        id="ftnt_ref166">[166]</a></sup> Eran Hammer, a senior developer at Walmart Labs, was quick to explain that
        <q>open source ain’t charity</q> and that <q>the size of the company using [hapi] translated to ‘free’
        engineering resources.</q> <sup><a href="appendix.xhtml#ftnt167" id="ftnt_ref167">[167]</a></sup> Dion Almaer,
        the former VP of engineering at Walmart Labs, noted that their commitment to open source helped with
        recruiting, building a strong company culture, and <q class="normal">a slew of areas of leverage.</q>
        <sup><a href="appendix.xhtml#ftnt168" id="ftnt_ref168">[168]</a></sup>
      </p>
      <p>
        In terms of direct support for maintainers, sometimes companies hire a maintainer to work on full-time on an
        open source project. Companies also occasionally donate to project crowdfunding campaigns. For example, a
        recent Kickstarter campaign to fund core work on Django raised £32,650 (roughly $50,000); Tom Christie, the
        campaign organizer, reported that 80% of total financing came from businesses. <sup><a href=
        "appendix.xhtml#ftnt169" id="ftnt_ref169">[169]</a></sup> However, these efforts are still ad hoc, and digital
        infrastructure as a CSR (corporate social responsibility) issue is not yet common among for-profit software
        companies. There is room for advocacy here.
      </p>
      <p>
        One of the best-known corporate programs is Google’s Summer of Code (GSoC), mentioned earlier in this paper,
        which provides stipends to university students to work on open source projects for a summer. Students are
        paired with mentors to help familiarize them with the project. Summer of Code is maintained by the Open Source
        Programs Office at Google, and has funded thousands of students. <sup><a href="appendix.xhtml#ftnt170" id=
        "ftnt_ref170">[170]</a></sup> <sup><a href="appendix.xhtml#ftnt171" id="ftnt_ref171">[171]</a></sup> GSoC’s
        goal is to give students an opportunity to write code for open source projects; it is not focused on funding
        those projects themselves.
      </p>
      <p>
        Last year, Stripe, a payments processing company, announced an “Open-Source Retreat,” offering stipends of up
        to $7,500 per month for a three month retreat at Stripe’s offices. <sup><a href="appendix.xhtml#ftnt172" id=
        "ftnt_ref172">[172]</a></sup> They initially intended to offer just two grants, but after receiving 120
        applications, they expanded the program to four grantees.
      </p>
      <p>
        The grantees were enthusiastic about the experience. One of the grantees, Andrey Petrov, continues to maintain
        the aforementioned Python library called urllib3, now used by every Python developer. Of the experience, Andrey
        wrote,
      </p>
      <blockquote>
        <p>
          Publishing and contributing to open source is going to continue happening regardless whether I’m getting paid
          for it or not, but it will be slow and unfocused. Which is fine, it’s how open source work has always worked.
          But it doesn’t need to be this way. [...]
        </p>
        <p>
          If you’re a tech company, please allocate a budget for open source grants and sponsorships. Distribute it on
          Gittip<sup><a href="appendix.xhtml#ftnt173" id="ftnt_ref173">[173]</a></sup> if you wish, or do what Stripe
          did and fund aggressive sprints towards some high-impact milestones.
        </p>
        <p>
          Consider this a formal call for sponsorship: <strong>Please help fund urllib3 development.</strong>
          <sup><a href="appendix.xhtml#ftnt174" id="ftnt_ref174">[174]</a></sup>
        </p>
      </blockquote>
      <p>
        Stripe’s Open-Source Retreat can serve as a model for what a CSR program could look like. Stripe decided to
        offer the program for a second year in 2015. Despite the popularity of their program and its warm reception by
        developers, this practice is still not common among other companies.
      </p>
      <p>
        Corporate interest in open source is growing rapidly, and nobody can predict exactly what it might mean in the
        long term. Companies could address the long term support gap by directing human resources and money towards
        open source projects. There could be formal fellowship programs to connect companies with open source
        maintainers needing full-time support. Whereas a project’s contributors used to be a mix of developers from
        different places, perhaps they will now be filled by a group of employees from a single company. Digital
        infrastructure might come to exist in a series of “walled gardens,” each well-supported and technically open,
        but effectively championed by one company and its employees, by virtue of that company’s limitless resources.
      </p>
      <p>
        Taken to its extreme, however, this scenario doesn’t bode well for innovation. Jeff Lindsay, a software
        architect who helped build the platform team for Twilio, a highly successful cloud communications company,
        mused in a podcast last year:
      </p>
      <blockquote>
        <p>
          Twilio is incentivized to make Twilio better, Amazon is incentivized to make Amazon better. But who’s
          incentivized to make them all work together better, and allow you to do more things with them together?
          There’s nobody that’s really incentivized to do that. <sup><a href="appendix.xhtml#ftnt175" id=
          "ftnt_ref175">[175]</a></sup>
        </p>
      </blockquote>
      <p>
        Timothy Fitz, a systems engineer, further explained:
      </p>
      <blockquote>
        <p>
          Bruce Schneier described this sort of thing as serfdom. So, we’re in a world where Google is a city-state,
          and Apple is a city-state, and...if I just continue to use Google products, and I stay within their walls, I
          get this great benefit. [But] living in a mixed world is almost impossible, and very painful, and everything
          has bugs, and no one of these companies really wants to support you. And so we’re in this weird world where,
          and if you look at a city-state world, one of the big problems was interstate commerce, if you have a tariff
          because you’re trying to export something from Austin and sell it to Dallas, that is not a good economy.
          You’re going to suffer from a lack of innovation and a lack of idea sharing. And that’s where we are right
          now.<sup><a href="appendix.xhtml#ftnt176" id="ftnt_ref176">[176]</a></sup> <sup><a href=
          "appendix.xhtml#ftnt177" id="ftnt_ref177">[177]</a></sup>
        </p>
      </blockquote>
      <p>
        Although the “serfdom” argument mostly refers to a company’s products, such as an iPhone versus an Android, it
        could also hold true for sponsored open source projects. The first improvements to be prioritized will be those
        that directly benefit a developer’s employer. This observation is not malicious or conspiratorial, but merely a
        constraint of being paid by a company to work on a project that is not directly their business.
      </p>
      <p>
        But nobody can control the origin of a successful open source project, whether Google, the Linux Foundation ,
        or an independent group of developers. New and valuable projects can come from anywhere, and when they provide
        a valuable service to other developers, they become popular. This is a good thing and fosters innovation.
      </p>
      <h3>
        Dedicated foundation support
      </h3>
      <p>
        Two foundations recently stepped forward to focus more specifically on supporting digital infrastructure: the
        Linux Foundation and the Mozilla Foundation.
      </p>
      <p>
        Following Heartbleed, the Linux Foundation announced the formation of the Core Infrastructure Initiative (CII)
        in order to prevent a similar situation from happening again. Jim Zemlin, the executive director of the Linux
        Foundation, gathered nearly $4 million in pledges from thirteen corporate donors, including Amazon Web
        Services, IBM, and Microsoft, to support security-related infrastructure projects over the next three years.
        <sup><a href="appendix.xhtml#ftnt178" id="ftnt_ref178">[178]</a></sup> They are also building government
        support, including support from the White House. <sup><a href="appendix.xhtml#ftnt179" id=
        "ftnt_ref179">[179]</a></sup> The CII is officially a project of the Linux Foundation. Since its formation in
        April 2014, the CII has sponsored development work on a number of projects, including OpenSSL, NTP, GnuPG (a
        communication encryption system), and OpenSSH (a set of security-related protocols). The CII primarily focuses
        on security-related projects as a subset of infrastructure .
      </p>
      <p>
        In October 2015, Mitchell Baker, chair of the Mozilla Foundation, announced the Mozilla Open Source Support
        Program (MOSS), pledging $1M to support free and open source software. According to Baker, the program will
        consist of a “give back” element for projects that Mozilla relies upon, and a “give forward” element to support
        free and open source projects at large. However, the first set of grants focused exclusively on the former.
        Mozilla identified nine projects for its initial set of grants, crowdsourcing suggestions from the community.
        <sup><a href="appendix.xhtml#ftnt180" id="ftnt_ref180">[180]</a></sup> They have also expressed interest in
        funding security audits of critical open source projects. <sup><a href="appendix.xhtml#ftnt181" id=
        "ftnt_ref181">[181]</a></sup>
      </p>
      <p>
        Finally, some foundations have made ad hoc contributions to software-related projects. For example, the Python
        Software Foundation makes small grants to organizations and individuals, mostly related to outreach and
        education. <sup><a href="appendix.xhtml#ftnt182" id="ftnt_ref182">[182]</a></sup>
      </p>
      <h3>
        Other institutional actors
      </h3>
      <p>
        There are several remaining actors who lend support to digital infrastructure in various ways: GitHub, venture
        capital, and academia.
      </p>
      <p>
        If Facebook is a “social utility” <sup><a href="appendix.xhtml#ftnt183" id="ftnt_ref183">[183]</a></sup> and
        Google is a “search utility” — both de facto governing bodies in their respective fields — then GitHub stands a
        chance to become the “open source utility.” Its business model likely precludes it from ever becoming a similar
        financial juggernaut (Facebook and Google both benefit greatly from advertising models, whereas GitHub
        monetizes by hosting code for enterprise clients, as well as charging individuals to host code privately), but
        GitHub is still the place where today’s open source is made and managed.
      </p>
      <p>
        GitHub hinted at greater aspirations when it took $350M in venture capital, despite already being profitable.
        If GitHub fully embraces its role as a steward of open source, it could have enormous influence on how those
        projects get supported. For example, it could create better tools to manage open source projects, advocate for
        certain types of licensing, or help project maintainers effectively manage their communities.
      </p>
      <p>
        GitHub has faced mounting pressure from project maintainers on these topics, including a “Dear GitHub” open
        letter written and signed by maintainers, many from the JavaScript community. The letter explained, <q>Many of
        us are frustrated. Those of us who run some of the most popular projects on GitHub feel completely ignored by
        you.</q> It included a list of requests for product improvements that could help them manage their projects
        more efficiently.<sup><a href="appendix.xhtml#ftnt184" id="ftnt_ref184">[184]</a></sup>
      </p>
      <p>
        GitHub itself is struggling with growing pains that have been well-documented in the media. Early on, the
        company became famous for its flat hierarchy, with no managers or top-down assignments. GitHub employees were
        given freedom to work on projects of their own choosing. <sup><a href="appendix.xhtml#ftnt185" id=
        "ftnt_ref185">[185]</a></sup> In recent years, as GitHub has grown to nearly 500 employees, the company has
        shifted its focus to the enterprise side of its business, hiring sales teams and enterprise executives and
        adopting a more traditional work hierarchy. The transition from a decentralized to more centralized culture has
        been difficult for GitHub: at least 10 executives left within a few months spanning the winter of 2015-2016,
        including the VP engineering, CFO, strategy VP, and human resources VP. <sup><a href="appendix.xhtml#ftnt186"
        id="ftnt_ref186">[186]</a></sup> Given these internal conflicts, GitHub has yet to publicly signal that it will
        take an advocacy role and provide leadership around open source’s more pressing infrastructure issues, but the
        potential is there.
      </p>
      <p>
        Venture capital, as discussed, has a personal stake in the future of digital infrastructure. Because developer
        tools help technology companies build faster and smarter, the better the tools, the better the startups, and
        the more venture capital thrives. However, “infrastructure,” from a venture capitalist’s mindset, is not
        limited to open source but rather focused on platforms that help other people create. Therefore, investments in
        GitHub or npm, which are platforms that help distribute open source code, make sense, but so do investments
        like Slack, a workplace collaboration platform which developers can use to create other “command”-driven apps.
        (To this point, venture capitalists formed a $80M “Slack fund” to support developer projects that use Slack.
        <sup><a href="appendix.xhtml#ftnt187" id="ftnt_ref187">[187]</a></sup> ) Even if venture capitalists appreciate
        the underlying mechanics of infrastructure, they are limited by their asset class: a VC could not make
        investments into a project that didn’t have a business model.
      </p>
      <p>
        Finally, academic institutions have played a prominent historic role in supporting digital infrastructure,
        especially the development of new projects. For example, LLVM, a compiler project for C and C++ languages,
        started as a research project at the University of Illinois at Urbana-Champaign. It is now used in Apple’s Mac
        OS X and iOS development tools, as well as Sony’s PS4 development kit.
      </p>
      <p>
        In another example, R, a popular programming language for statistical computing and data analysis, was
        initially written by Robert Gentleman and Ross Ihaka at the University of Auckland. <sup><a href=
        "appendix.xhtml#ftnt188" id="ftnt_ref188">[188]</a></sup> R is used not just by software companies like
        Facebook or Google, but also by Bank of America, the Food and Drug Administration, and the National Weather
        Service, among others. <sup><a href="appendix.xhtml#ftnt189" id="ftnt_ref189">[189]</a></sup>
      </p>
      <p>
        Some universities also employ maintainers, who then have the freedom to work on open source projects. For
        example, Network Time Protocol, used to synchronize time on the Web, was first developed by David Mills, now an
        emeritus professor at the University of Delaware. (The project continues to be maintained by a group of
        volunteers, led by Harlan Stenn.) Bash, the aforementioned developer tool, is currently maintained by Chet
        Ramey, who is employed by the Information Technology Services division of Case Western University.
      </p>
      <p>
        Academic institutions have the potential to play an important role in supporting newer projects, due to their
        endowment model and mission alignment, but they can also lack the speed necessary to appeal to modern open
        source developers. NumFOCUS is an example of a 501(c)(3) foundation that supports open source scientific
        software through fiscal sponsorship and donations. <sup><a href="appendix.xhtml#ftnt190" id=
        "ftnt_ref190">[190]</a></sup> An external foundation model could help provide the support that scientific
        software needs within the context of an academic environment. The Alfred P. Sloan Foundation and the Gordon and
        Betty Moore Foundation are also experimenting with ways to connect academic institutions with maintainers of
        data science software, in order to facilitate an open and sustainable ecosystem. <sup><a href=
        "appendix.xhtml#ftnt191" id="ftnt_ref191">[191]</a></sup>
      </p>
    </section>
  </body>
</html>
